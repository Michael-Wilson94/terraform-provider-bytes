trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.2.8'
  providerName: 'bytes'

steps:
- task: DownloadSecureFile@1
  name: gpgKey
  inputs:
    secureFile: 'private-key.gpg'

- script: |
    echo "Checking the GPG key file..."
    ls -lh $(gpgKey.secureFilePath)
    sha256sum $(gpgKey.secureFilePath)
  displayName: 'Check GPG Key File'

- script: |
    version=$(git describe --tags $(git rev-list --tags --max-count=1))
    echo "##vso[task.setvariable variable=releaseVersion]$version"
    echo $version
  displayName: 'Get Version Number from Tag'

- script: |
    sudo apt-get update
    sudo apt-get -y install wget
    wget https://golang.org/dl/go1.21.3.linux-amd64.tar.gz
    sudo tar -C /usr/local -xzf go1.21.3.linux-amd64.tar.gz
    echo "##vso[task.prependpath]/usr/local/go/bin"
  displayName: 'Install Go'


- script: |
    go version
    echo "Importing GPG Key..."
    gpg --import $(gpgKey.secureFilePath)
    gpg --list-secret-keys --keyid-format LONG
    echo "Building and Signing the Terraform provider..."
    echo "$(GpgPassphrase)"
    go build -o terraform-provider-$(providerName)
    gpg --batch --yes --passphrase $(GpgPassphrase) --detach-sign terraform-provider-myprovider
  displayName: 'Build and Sign Terraform Provider'

- script: |
    echo "Creating a GitHub Release..."
    echo "user email $(userEmail)"
    # Install required tools
    wget https://github.com/github/hub/releases/download/v2.14.2/hub-linux-amd64-2.14.2.tgz
    tar -zxvf hub-linux-amd64-2.14.2.tgz
    sudo ./hub-linux-amd64-2.14.2/install
    # Configure hub
    hub config --global user.name $(userName)
    hub config --global user.email $(userEmail)
    echo $(githubToken) | gh auth login --with-token
    # Create GitHub release
    hub release create -a terraform-provider-myprovider -m "Release v$(releaseVersion)" v$(releaseVersion)
  displayName: 'Create GitHub Release'
